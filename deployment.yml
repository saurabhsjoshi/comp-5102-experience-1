apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: comp4000
  name: comp4000server
spec:
  replicas: 5
  selector:
    matchLabels:
      app: comp4000
      component: server
  template:
    metadata:
      labels:
        app: comp4000
        component: server
    spec:
      containers:
        - name: comp4000server
          image: wpfindlay/comp4000-ex1:server-latest
          imagePullPolicy: Always
          ports:
            - containerPort: 4000

---

apiVersion: v1
kind: Pod
metadata:
  labels:
    app: comp4000
    component: client
  name: comp4000client
spec:
  containers:
    - name: comp4000client
      image: wpfindlay/comp4000-ex1:client-latest
      imagePullPolicy: Always
      command: [ "/bin/sh" ]
      args: [ "-c", "trap : TERM INT; sleep infinity & wait" ]
  restartPolicy: Never

---

---

apiVersion: v1
kind: Pod
metadata:
  labels:
    app: comp4000
    component: persist-client
  name: comp4000persistclient
spec:
  volumes:
    - name: task-pv-storage
      persistentVolumeClaim:
        claimName: task-pv-claim
  containers:
    - name: comp4000persistclient
      image: persist-facts:latest
      imagePullPolicy: Never
      ports:
        - containerPort: 8080
      env:
        - name: FACTS_SERVER
          value: "comp4000port/printerfacts"
      volumeMounts:
        - mountPath: "/opt/app"
          name: task-pv-storage
  restartPolicy: Never

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: task-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/opt"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi
---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: comp4000
  name: comp4000port
spec:
  type: NodePort
  selector:
    app: comp4000
    component: server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4000
---


apiVersion: v1
kind: Service
metadata:
  labels:
    app: comp4000
  name: persist-facts-port
spec:
  type: NodePort
  selector:
    app: comp4000
    component: persist-client
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  defaultBackend:
    service:
      name: persist-facts-port
      port:
        number: 80